model User {
  id        Int        @id @default(autoincrement())
  username  String     @unique
  email     String     @unique
  program   Program?
  programId Int?
  progress  Progress[]
}

model Program {
  id       Int       @id @default(autoincrement())
  title    String
  user     User      @relation(fields: [userId], references: [id])
  userId   Int       @unique
  workouts Workout[]
}

model Workout {
  id        Int        @id @default(autoincrement())
  type      String
  program   Program    @relation(fields: [programId], references: [id])
  programId Int
  exercises Exercise[]
}

model Exercise {
  id        Int     @id @default(autoincrement())
  name      String
  reps      Int
  sets      Int
  workout   Workout @relation(fields: [workoutId], references: [id])
  workoutId Int
}

model Progress {
  id       Int    @id @default(autoincrement())
  user     User   @relation(fields: [userId], references: [id])
  userId   Int
  workouts Json // You can use the JSON type for flexibility in storing workout details
  que      String
}
